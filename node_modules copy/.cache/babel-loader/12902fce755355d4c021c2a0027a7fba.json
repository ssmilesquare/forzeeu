{"ast":null,"code":"import { Store } from 'pullstate';\n\n//return an (16 x 16) 2D array filled with \"#FFFFFF\"\nconst createEmptyCanvas = () => {\n  const output = [];\n\n  for (let i = 0; i < 16; i++) {\n    output[i] = [];\n\n    for (let j = 0; j < 16; j++) {\n      output[i].push('#FFFFFF');\n    }\n  }\n\n  return output;\n};\n\nexport const PixelPainterStore = new Store({\n  canvas: createEmptyCanvas()\n});","map":{"version":3,"sources":["D:/CPE_CMU/1_64/BACOMLAB/LAB/lab-07-ssmilesquare/src/stores/PixelPainterStore.ts"],"names":["Store","createEmptyCanvas","output","i","j","push","PixelPainterStore","canvas"],"mappings":"AAAA,SAAQA,KAAR,QAAoB,WAApB;;AAOA;AACA,MAAMC,iBAAiB,GAAG,MAAM;AAC9B,QAAMC,MAAkB,GAAG,EAA3B;;AACA,OAAK,IAAIC,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAC,EAAhB,EAAoBA,CAAC,EAArB,EAAwB;AACtBD,IAAAA,MAAM,CAACC,CAAD,CAAN,GAAY,EAAZ;;AACA,SAAK,IAAIC,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAC,EAAhB,EAAoBA,CAAC,EAArB,EAAwB;AACtBF,MAAAA,MAAM,CAACC,CAAD,CAAN,CAAUE,IAAV,CAAe,SAAf;AACD;AACF;;AACD,SAAOH,MAAP;AACD,CATD;;AAWA,OAAO,MAAMI,iBAAiB,GAAG,IAAIN,KAAJ,CAAiC;AAChEO,EAAAA,MAAM,EAAEN,iBAAiB;AADuC,CAAjC,CAA1B","sourcesContent":["import {Store} from 'pullstate'\r\n\r\ntype PixelPainterStoreType = {\r\n  //we save painted color as hex code (string) in 2D array\r\n  canvas: string[][] \r\n}\r\n\r\n//return an (16 x 16) 2D array filled with \"#FFFFFF\"\r\nconst createEmptyCanvas = () => {\r\n  const output: string[][] = []\r\n  for (let i=0; i<16; i++){\r\n    output[i] = []\r\n    for (let j=0; j<16; j++){\r\n      output[i].push('#FFFFFF')\r\n    }\r\n  }\r\n  return output\r\n}\r\n\r\nexport const PixelPainterStore = new Store<PixelPainterStoreType>({\r\n  canvas: createEmptyCanvas()\r\n})"]},"metadata":{},"sourceType":"module"}